version: '3'

services:
  proxy:
    container_name: proxy
    build:
      context: ./dev-dependencies/nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./nginx/production:/etc/nginx/conf.d
    networks:
      - web
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    depends_on:
      - api
      - nuxt
  postgres:
    container_name: postgres
    image: postgres:10.8
    restart: always
    expose:
      - 5432
    environment:
      POSTGRES_USER: 'pguser'
      POSTGRES_PASSWORD: 'pguserpass'
      POSTGRES_DB: 'dotnetcoredocker'
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - internal
  api:
    container_name: api
    build:
      context: ./core
      dockerfile: Dockerfile
    restart: always
    expose:
      - 80
    environment:
      DB_CONNECTION_STRING: 'Server=postgres;Port=5432;Database=dotnetcoredocker;User Id=pguser;Password=pguserpass'
      PORT: 80
    depends_on:
      - postgres
    networks:
      - internal
      - web
  nuxt:
    container_name: nuxt
    build:
      context: ./nuxt
      dockerfile: Dockerfile
    restart: always
    expose:
      - 3000
    environment:
      HOST: 0.0.0.0
      NODE_ENV: production
    command: 'npm run start'
    depends_on:
      - api
    networks:
      - web

volumes:
  pgdata:

networks:
  internal:
  web:
    external:
      name: nginx_web